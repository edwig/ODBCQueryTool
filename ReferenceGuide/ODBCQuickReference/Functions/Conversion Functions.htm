<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<html>
<head>
    <title>Conversion Functions</title>
    <!--(==============================================================)-->

    <!--(Document created with RoboEditor. )============================-->

    <!--(==============================================================)-->

    <!--(Meta)==========================================================-->
    <meta content="text/html; charset=us-ascii" http-equiv="content-type">
    <meta name="GENERATOR" content="AuthorDocumentation">
    <meta name="generator-major-version" content="0.1">
    <meta name="generator-minor-version" content="1">
    <meta name="filetype" content="kadov">
    <meta name="filetype-version" content="1">
    <meta name="page-count" content="1">
    <meta name="layout-height" content="615">
    <meta name="layout-width" content="782">
    <!--(Links)=========================================================-->
    <link rel="stylesheet" type="text/css" href="../../ODBC_Reference.css">
    <!--(Body)==========================================================-->
</head>

<body>
    <h1>Conversion Functions</h1>

    <p class="tab_header">The CAST function defined in SQL92 is equivalent to the CONVERT function defined in ODBC. The syntax
    of the equivalent functions is as follows:</p>

    <p>ODBC: SELECT { fn CONVERT (value-exp, data-type)} ....</p>

    <p>CAST: SELECT (value-exp AS data-type) ....</p>

    <p>To see if either is supported, look this up in the ODBC tree:</p>

    <p><img style=
    "BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; WIDTH: 338px; FLOAT: none; HEIGHT: 218px; BORDER-TOP: medium none; BORDER-RIGHT: medium none"
    border="0" src="../Pictures/Conversion_functions.bmp" width="338" height="218" x-maintain-ratio="TRUE"></p>Here you can
    find whether the standard CAST is supported (in this case it isn't) and if the ODBC function CONVERT is your friendly
    helper (in this case it is!) 
    <!--begin!kadov{{--><br>

    <!--}}end!kadov-->
     
    <!--kadov_tag{{<implicit_p>}}-->Per datatype you can find the supported conversions to another datatype by prefixing the
    desired datatype with the keyword "SQL_". 
    <!--begin!kadov{{--><br>

    <!--}}end!kadov-->
     
    <!--kadov_tag{{<implicit_p>}}-->&nbsp; 
    <!--begin!kadov{{--><br>

    <!--}}end!kadov-->
     
    <!--kadov_tag{{<implicit_p>}}-->Example: To convert a decimal to a character field use: "{ fn CONVERT( numberfield,
    SQL_CHAR)} ..." 
    <!--begin!kadov{{--><br>

    <!--}}end!kadov-->
     
    <!--kadov_tag{{<implicit_empty_p>}}-->&nbsp;<br>

    <!--kadov_tag{{</implicit_empty_p>}}-->
     
    <!--(HR)============================================================-->
    <hr style="HEIGHT: 1px" align="center" size="1">

    <p>This SQL Reference is not the complete documentation for your SQL language. For more detailed information see the
    documentation of your RDBMS.</p>
</body>
</html>
